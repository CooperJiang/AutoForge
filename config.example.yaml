# 定时任务系统配置示例
# 复制此文件为 config.yaml 并根据实际情况修改

# 应用基础配置
app:
  name: "auto-task"                # 应用名称
  port: 9000                       # 应用监听端口
  mode: "release"                  # 运行模式: debug/release
  defaultRootPass: "your_strong_password"  # 初次启动时自动创建的root管理员密码（请修改为强密码）
  timezone: "Asia/Shanghai"        # 时区设置
  api_prefix: "/api/v1"            # API路由前缀

# 前端模块配置
frontend:
  web:
    enabled: true                  # 是否启用Web前端
    route_prefix: "/"              # 前端路由前缀
    title: "定时任务系统"          # 页面标题
    description: "HTTP定时任务管理系统"

# 数据库配置
database:
  driver: "mysql"                  # 数据库类型: mysql/sqlite
  host: "localhost"                # 数据库地址（使用sqlite时可为空）
  port: 3306                       # 数据库端口
  username: "your_username"        # 数据库用户名
  password: "your_password"        # 数据库密码
  name: "auto_task"                # 数据库名称
  charset: "utf8mb4"               # 字符集
  max_idle_conns: 10               # 最大空闲连接数
  max_open_conns: 100              # 最大打开连接数
  conn_max_lifetime: 3600          # 连接最大生命周期(秒)
  slow_query_threshold: 200        # 慢查询阈值(毫秒)
  enable_logging: false            # 是否启用SQL日志
  table_prefix: ""                 # 表名前缀

# 日志配置
log:
  level: "info"                    # 日志级别: debug/info/warn/error
  path: "logs"                     # 日志保存目录
  filename: "app.log"              # 日志文件名
  max_size: 100                    # 单文件最大大小(MB)
  max_backups: 10                  # 最大保留文件数
  max_age: 7                       # 最大保留天数
  compress: true                   # 是否压缩旧日志
  json_format: false               # 是否使用JSON格式
  show_caller: false               # 是否显示调用者信息
  show_line: false                 # 是否显示行号
  show_stack: false                # 是否显示堆栈
  enable_console: false            # 是否输出到控制台

# JWT认证配置
jwt:
  secret_key: "change-to-your-secure-secret-key" # JWT签名密钥，生产环境必须修改为强密钥
  expires_in: 24                   # JWT令牌有效期，单位小时
  refresh_expires_in: 168          # 刷新令牌有效期，单位小时
  issuer: "auto-task"              # JWT发行者
  audience: "auto-task-users"      # JWT接收者
  blacklist_enabled: true          # 是否启用令牌黑名单
  blacklist_cleanup_interval: 24   # 黑名单清理间隔(小时)

# Redis缓存配置
redis:
  host: ""                         # Redis主机地址，设置为空字符串将禁用Redis并自动降级为内存缓存
  port: 6379                       # Redis端口
  password: ""                     # Redis密码，无密码则留空
  db: 0                            # Redis数据库索引，默认为0
  pool_size: 10                    # 连接池大小
  min_idle_conns: 5                # 最小空闲连接数
  max_conn_age: 3600               # 连接最大生命周期(秒)
  idle_timeout: 240                # 空闲连接超时时间(秒)
  read_timeout: 3                  # 读取超时时间(秒)
  write_timeout: 3                 # 写入超时时间(秒)
  dial_timeout: 5                  # 连接超时时间(秒)

# 邮件服务配置
mail:
  host: "smtp.example.com"         # SMTP服务器地址
  port: 587                        # SMTP端口，通常SSL为465，TLS为587
  username: "your_email@example.com"   # SMTP用户名/邮箱地址
  password: "your_email_password"  # SMTP密码
  from: "your_email@example.com"   # 发件人邮箱，通常与username相同
  from_name: "定时任务系统"         # 发件人名称
  reply_to: "your_email@example.com"   # 回复地址
  ssl: true                        # 是否使用SSL加密，通常为true
  enabled: true                    # 是否启用邮件服务，设为false则不发送邮件
  template_path: "templates/mail"  # 邮件模板路径
  max_retries: 3                   # 发送失败最大重试次数
  retry_interval: 5                # 重试间隔(秒)

# 跨域配置
cors:
  enabled: true                    # 是否启用CORS
  allowed_origins:                 # 允许的来源域名
    - "https://yourdomain.com"
    - "http://localhost:3200"      # 开发环境
  allowed_methods:                 # 允许的HTTP方法
    - "GET"
    - "POST"
    - "PUT"
    - "DELETE"
    - "OPTIONS"
  allowed_headers:                 # 允许的请求头
    - "Origin"
    - "Content-Type"
    - "Authorization"
  allow_credentials: true          # 是否允许携带凭证
  max_age: 86400                   # 预检请求缓存时间(秒)
  expose_headers:                  # 允许访问的响应头
    - "Content-Length"
    - "Content-Type"
